{"version":3,"sources":["webpack:///static/js/main.js","webpack:///webpack/bootstrap bfabf7a7fad80150a995","webpack:///./src/js/app.js","webpack:///./src/js/formHandler.es6","webpack:///./src/js/input.es6","webpack:///./src/js/userLogHandler.es6"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_formHandler","obj","default","init","_interopRequireDefault","_toConsumableArray","arr","Array","isArray","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","_input","_input2","_userLogHandler","_userLogHandler2","FormHandler","this","form","document","signup","listContainer","querySelector","USER_LIST_CONTAINER_SELECTOR","log","submit","SUBMIT_ELEMENT_SELECTOR","msg","MESSAGE_ELEMENT_SELECTOR","NEW_ENTRY_CLASS","Error","initForm","bindEvents","createList","_this","querySelectorAll","FORM_ELEMENT_SELECTOR","forEach","el","formElement","getAttribute","fetchCountries","selectInstance","_this2","fetch","COUNTRY_API_URL","then","data","json","optionList","map","optionVal","selectList","submitState","catch","error","disabled","arguments","undefined","addEventListener","onSubmit","bind","ev","getFormData","displayMessage","removeNewEntryClass","addLog","userList","reset","preventDefault","NEW_ENTRY_SELECTOR","classList","remove","offsetWidth","inputs","elements","lastname","surname","country","birthdayString","birthday","bd","stringToDate","yearsOld","nextBirthdayAge","MESSAGE_HIDDEN_CLASS","innerHTML","getDate","MONTH_NAMES","getMonth","stringDate","dateValue","split","reverse","val","parseFloat","Function","apply","Date","concat","difDates","now","getTime","Math","abs","getUTCFullYear","newEntry","entryHTML","createElement","addedEntry","insertBefore","firstChild","add","_this3","Input","containerElement","inputSelector","_containerElement","_inputElement","message","FORM_GROUP_ERROR_CLASS","msgContainer","INPUT_ERROR_SELECTOR","blurEventHandler","keyUpEventHandler","validate","validationMessage","contains","required","checkValidity","set","tagName","option","optionEl","appendChild","setAttribute","Log","list","push","localStorage","setItem","LOCALSTORAGE_VARIABLE","JSON","stringify","parse","getItem"],"mappings":"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","file":"static/js/main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _formHandler = __webpack_require__(2);\n\nvar _formHandler2 = _interopRequireDefault(_formHandler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar form = new _formHandler2.default();\n\nform.init();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _input = __webpack_require__(3);\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _userLogHandler = __webpack_require__(4);\n\nvar _userLogHandler2 = _interopRequireDefault(_userLogHandler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FormHandler = function () {\n    _createClass(FormHandler, null, [{\n        key: 'MESSAGE_HIDDEN_CLASS',\n\n        /**\n         * Message class for hiding it\n         * @constant\n         * @type {String}\n         */\n        get: function get() {\n            return 'msg--hidden';\n        }\n        /**\n         * New entry class used for animation\n         * @constant\n         * @type {String}\n         */\n\n    }, {\n        key: 'NEW_ENTRY_CLASS',\n        get: function get() {\n            return 'user-list__entry--new';\n        }\n        /**\n         * New entry selector\n         * @constant\n         * @type {String}\n         */\n\n    }, {\n        key: 'NEW_ENTRY_SELECTOR',\n        get: function get() {\n            return '.' + FormHandler.NEW_ENTRY_CLASS;\n        }\n        /**\n         * User list container selector\n         * @constant\n         * @type {String}\n         */\n\n    }, {\n        key: 'USER_LIST_CONTAINER_SELECTOR',\n        get: function get() {\n            return '.js-user-list';\n        }\n        /**\n         * Selector for each of the form elements (inputs, select)\n         * @constant\n         * @type {String}\n         */\n\n    }, {\n        key: 'FORM_ELEMENT_SELECTOR',\n        get: function get() {\n            return '.js-form-el';\n        }\n        /**\n         * Submit button selector\n         * @constant\n         * @type {String}\n         */\n\n    }, {\n        key: 'SUBMIT_ELEMENT_SELECTOR',\n        get: function get() {\n            return '.js-submit';\n        }\n        /**\n         * Message element selector\n         * @constant\n         * @type {String}\n         */\n\n    }, {\n        key: 'MESSAGE_ELEMENT_SELECTOR',\n        get: function get() {\n            return '.js-msg';\n        }\n        /**\n         * Country list API\n         * @constant\n         * @type {String}\n         */\n\n    }, {\n        key: 'COUNTRY_API_URL',\n        get: function get() {\n            return 'https://restcountries.eu/rest/v2/all';\n        }\n        /**\n         * Month name array list\n         * @constant\n         * @type {Array}\n         */\n\n    }, {\n        key: 'MONTH_NAMES',\n        get: function get() {\n            return ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        }\n        /**\n         * Create a new component\n         * @constructor\n         */\n\n    }]);\n\n    function FormHandler() {\n        _classCallCheck(this, FormHandler);\n\n        this.form = document.signup;\n        this.listContainer = document.querySelector(FormHandler.USER_LIST_CONTAINER_SELECTOR);\n        this.log = new _userLogHandler2.default();\n\n        if (this.form && this.listContainer) {\n            this.submit = this.form.querySelector(FormHandler.SUBMIT_ELEMENT_SELECTOR);\n            this.msg = this.form.querySelector(FormHandler.MESSAGE_ELEMENT_SELECTOR);\n        }\n    }\n\n    _createClass(FormHandler, [{\n        key: 'init',\n        value: function init() {\n            if (this.form && this.listContainer) {\n                this.initForm();\n                this.bindEvents();\n                this.createList();\n            } else {\n                throw new Error('Some of the elements needed are not present in the document.');\n            }\n        }\n\n        /**\n         * Creates a new instance of Input for each of the form elements\n         */\n\n    }, {\n        key: 'initForm',\n        value: function initForm() {\n            var _this = this;\n\n            var formEl = this.form.querySelectorAll(FormHandler.FORM_ELEMENT_SELECTOR);\n\n            formEl.forEach(function (el) {\n                var formElement = new _input2.default(el);\n                if (el.getAttribute('data-type') === 'countryList') {\n                    _this.fetchCountries(formElement);\n                }\n            });\n        }\n\n        /**\n         * Fetch the contries API and fills the select with the result\n         * @param {Object} selectInstance - Input/select instance\n         */\n\n    }, {\n        key: 'fetchCountries',\n        value: function fetchCountries(selectInstance) {\n            var _this2 = this;\n\n            if (selectInstance) {\n                fetch(FormHandler.COUNTRY_API_URL).then(function (data) {\n                    return data.json();\n                }).then(function (data) {\n                    var optionList = data.map(function (el) {\n                        var optionVal = {};\n                        optionVal.name = el.name;\n                        return optionVal;\n                    });\n\n                    selectInstance.selectList = optionList;\n                    _this2.submitState(false);\n                }).catch(function () {\n                    selectInstance.error('Sorry, we got an error trying to get the country list');\n                });\n            }\n        }\n\n        /**\n         * Change the disabled state of the submit button\n         * @param {Boolean} disabled\n         */\n\n    }, {\n        key: 'submitState',\n        value: function submitState() {\n            var disabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            if (this.submit) {\n                this.submit.disabled = disabled;\n            }\n        }\n\n        /**\n         * Initial event listener for the form submission\n         */\n\n    }, {\n        key: 'bindEvents',\n        value: function bindEvents() {\n            this.form.addEventListener('submit', this.onSubmit.bind(this));\n        }\n\n        /**\n         * On submit events\n         * @param {Object} ev - Submit event\n         */\n\n    }, {\n        key: 'onSubmit',\n        value: function onSubmit(ev) {\n            var data = this.getFormData();\n\n            this.displayMessage(data);\n            this.removeNewEntryClass();\n            this.addLog(data, true);\n            this.log.userList = data;\n            this.form.reset();\n\n            ev.preventDefault();\n        }\n\n        /**\n         * Removes the new entry class to allow a new animation on a new submit\n         */\n\n    }, {\n        key: 'removeNewEntryClass',\n        value: function removeNewEntryClass() {\n            var newEntries = this.listContainer.querySelectorAll(FormHandler.NEW_ENTRY_SELECTOR);\n            newEntries.forEach(function (el) {\n                el.classList.remove(FormHandler.NEW_ENTRY_CLASS);\n                void el.offsetWidth; // Force reflow for re-starting the animation. Otherwise it won't work\n            });\n        }\n\n        /**\n         * Creates an object with the form data\n         * @returns {Object} cookie value\n         */\n\n    }, {\n        key: 'getFormData',\n        value: function getFormData() {\n            var inputs = this.form.elements;\n            var obj = {\n                name: inputs.name.value,\n                lastname: inputs.surname.value,\n                country: inputs.country.value,\n                birthdayString: inputs.birthday.value\n            };\n            return obj;\n        }\n\n        /**\n         * Display the message and creates the string based on data\n         * @param {Object} data - user data\n         */\n\n    }, {\n        key: 'displayMessage',\n        value: function displayMessage(data) {\n            if (this.msg && data) {\n                var bd = this.stringToDate(data.birthdayString);\n                var yearsOld = this.nextBirthdayAge(bd);\n\n                this.msg.classList.remove(FormHandler.MESSAGE_HIDDEN_CLASS);\n                this.msg.innerHTML = 'Hello ' + data.name + ' ' + data.lastname + ' from ' + data.country + '.';\n                this.msg.innerHTML += ' on ' + bd.getDate() + ' of ' + FormHandler.MONTH_NAMES[bd.getMonth()];\n                this.msg.innerHTML += ' you will have ' + yearsOld + ' years old.';\n            }\n        }\n\n        /**\n         * Turns a date from String to a Date object\n         * @param {String} stringDate - the expected format is DD/MM/YYYY\n         * @returns {Object} Date object\n         */\n\n    }, {\n        key: 'stringToDate',\n        value: function stringToDate() {\n            var stringDate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '01/01/1970';\n\n            var dateValue = stringDate.split('/').reverse().map(function (val, i) {\n                return i === 1 ? parseFloat(val) - 1 : parseFloat(val);\n            });\n\n            return new (Function.prototype.bind.apply(Date, [null].concat(_toConsumableArray(dateValue))))();\n        }\n\n        /**\n         * Calculates the age on the next birthday\n         * @param {Date object} birthday\n         * @returns {Number} Age on the next birthday\n         */\n\n    }, {\n        key: 'nextBirthdayAge',\n        value: function nextBirthdayAge() {\n            var birthday = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n\n            var difDates = new Date(Date.now() - birthday.getTime());\n            return Math.abs(difDates.getUTCFullYear() - 1970) + 1;\n        }\n\n        /**\n         * Adds a new entry to the user list, and adds an event listener to the element\n         * @param {Object} data - user data\n         */\n\n    }, {\n        key: 'addLog',\n        value: function addLog() {\n            var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            var newEntry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var entryHTML = document.createElement('div');\n            entryHTML.innerHTML = '<div class=\"user-list__entry\">' + ('<span class=\"user-list__cel user-list__cel--main\">' + data.name + ' ' + data.lastname + '</span>') + ('<span class=\"user-list__cel\">' + data.country + '</span>') + ('<span class=\"user-list__cel\">' + data.birthdayString + '</span>') + '</div>';\n            var addedEntry = this.listContainer.insertBefore(entryHTML.firstChild, this.listContainer.firstChild);\n\n            if (newEntry) {\n                addedEntry.classList.add(FormHandler.NEW_ENTRY_CLASS);\n            }\n            addedEntry.addEventListener('click', this.displayMessage.bind(this, data));\n        }\n\n        /**\n         * Creates the list based on the data saved on the localStorage\n         */\n\n    }, {\n        key: 'createList',\n        value: function createList() {\n            var _this3 = this;\n\n            var list = this.log.userList;\n\n            list.forEach(function (el) {\n                _this3.addLog(el);\n            });\n        }\n    }]);\n\n    return FormHandler;\n}();\n\nexports.default = FormHandler;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class Input\n * Reusable based for inputs\n */\nvar Input = function () {\n    _createClass(Input, null, [{\n        key: 'FORM_GROUP_ERROR_CLASS',\n\n        /**\n         * @constant\n         * @type {string}\n         */\n        get: function get() {\n            return 'form-el--error';\n        }\n        /**\n         * @constant\n         * @type {string}\n         */\n\n    }, {\n        key: 'INPUT_ERROR_SELECTOR',\n        get: function get() {\n            return '.js-input-error';\n        }\n        /**\n         * Create a new component\n         * @constructor\n         */\n\n    }]);\n\n    function Input(containerElement) {\n        var inputSelector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'input, textarea, select';\n\n        _classCallCheck(this, Input);\n\n        this._containerElement = containerElement;\n        this._inputElement = this._containerElement.querySelector(inputSelector);\n        this.bindEvents();\n    }\n\n    /**\n     * Add the error class and message to the input\n     * @param {array} messages - error messages\n     */\n\n\n    _createClass(Input, [{\n        key: 'error',\n        value: function error() {\n            var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n            this._containerElement.classList.add(Input.FORM_GROUP_ERROR_CLASS);\n\n            var msgContainer = this._containerElement.querySelector(Input.INPUT_ERROR_SELECTOR);\n\n            if (msgContainer) {\n                msgContainer.innerHTML = message;\n            }\n        }\n        /**\n         * Binds the events to the input\n         */\n\n    }, {\n        key: 'bindEvents',\n        value: function bindEvents() {\n            if (this._inputElement) {\n                this._inputElement.addEventListener('blur', this.blurEventHandler.bind(this));\n                this._inputElement.addEventListener('keyup', this.keyUpEventHandler.bind(this));\n            }\n        }\n        /**\n         * Handle onBlur Event for input field\n         */\n\n    }, {\n        key: 'blurEventHandler',\n        value: function blurEventHandler() {\n            if (!this.validate()) {\n                this.error(this._inputElement.validationMessage);\n            } else {\n                this.error();\n                this._containerElement.classList.remove(Input.FORM_GROUP_ERROR_CLASS);\n            }\n        }\n        /**\n         * Handle onFocus Event for input field\n         */\n\n    }, {\n        key: 'keyUpEventHandler',\n        value: function keyUpEventHandler() {\n            if (this._containerElement.classList.contains(Input.FORM_GROUP_ERROR_CLASS)) {\n                this.blurEventHandler();\n            }\n        }\n\n        /**\n         * Check for input validation\n         */\n\n    }, {\n        key: 'validate',\n        value: function validate() {\n            if ((this.required || this._inputElement.getAttribute('pattern')) && !this._inputElement.checkValidity()) {\n                this._containerElement.classList.add(Input.FORM_GROUP_ERROR_CLASS);\n                return false;\n            }\n            return true;\n        }\n\n        /**\n         * Get/set data\n         */\n\n    }, {\n        key: 'selectList',\n        set: function set(data) {\n            var _this = this;\n\n            if (this._inputElement.tagName === 'SELECT') {\n                this._inputElement.innerHTML = '';\n                data.forEach(function (option) {\n                    if (option.name) {\n                        var optionEl = document.createElement('option');\n                        _this._inputElement.appendChild(optionEl);\n                        optionEl.innerHTML = option.name;\n                        optionEl.setAttribute('value', option.val || option.name);\n                    }\n                });\n            }\n        }\n\n        /**\n         * Get/set required\n         */\n\n    }, {\n        key: 'required',\n        set: function set(value) {\n            this._inputElement.required = value;\n        },\n        get: function get() {\n            return this._inputElement.required;\n        }\n    }]);\n\n    return Input;\n}();\n\nexports.default = Input;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class UserLogHandler\n * Handles the user list stored in the localStorage\n */\nvar Log = function () {\n    function Log() {\n        _classCallCheck(this, Log);\n    }\n\n    _createClass(Log, [{\n        key: 'userList',\n\n        /**\n         * Get/set required\n         */\n        set: function set(value) {\n            var list = this.userList;\n            list.push(value);\n            localStorage.setItem(Log.LOCALSTORAGE_VARIABLE, JSON.stringify(list));\n        },\n        get: function get() {\n            return JSON.parse(localStorage.getItem(Log.LOCALSTORAGE_VARIABLE)) || [];\n        }\n    }], [{\n        key: 'LOCALSTORAGE_VARIABLE',\n\n        /**\n         * Variable name for localStorage\n         * @constant\n         * @type {String}\n         */\n        get: function get() {\n            return 'userList';\n        }\n    }]);\n\n    return Log;\n}();\n\nexports.default = Log;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(0);\nmodule.exports = __webpack_require__(1);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bfabf7a7fad80150a995","import FormHandler from './formHandler.es6';\n\nconst form = new FormHandler();\n\nform.init();\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/app.js","import Input from './input.es6';\nimport Log from './userLogHandler.es6';\n\nexport default class FormHandler {\n    /**\n     * Message class for hiding it\n     * @constant\n     * @type {String}\n     */\n    static get MESSAGE_HIDDEN_CLASS() {\n        return 'msg--hidden';\n    }\n    /**\n     * New entry class used for animation\n     * @constant\n     * @type {String}\n     */\n    static get NEW_ENTRY_CLASS() {\n        return 'user-list__entry--new';\n    }\n    /**\n     * New entry selector\n     * @constant\n     * @type {String}\n     */\n    static get NEW_ENTRY_SELECTOR() {\n        return `.${FormHandler.NEW_ENTRY_CLASS}`;\n    }\n    /**\n     * User list container selector\n     * @constant\n     * @type {String}\n     */\n    static get USER_LIST_CONTAINER_SELECTOR() {\n        return '.js-user-list';\n    }\n    /**\n     * Selector for each of the form elements (inputs, select)\n     * @constant\n     * @type {String}\n     */\n    static get FORM_ELEMENT_SELECTOR() {\n        return '.js-form-el';\n    }\n    /**\n     * Submit button selector\n     * @constant\n     * @type {String}\n     */\n    static get SUBMIT_ELEMENT_SELECTOR() {\n        return '.js-submit';\n    }\n    /**\n     * Message element selector\n     * @constant\n     * @type {String}\n     */\n    static get MESSAGE_ELEMENT_SELECTOR() {\n        return '.js-msg';\n    }\n    /**\n     * Country list API\n     * @constant\n     * @type {String}\n     */\n    static get COUNTRY_API_URL() {\n        return 'https://restcountries.eu/rest/v2/all';\n    }\n    /**\n     * Month name array list\n     * @constant\n     * @type {Array}\n     */\n    static get MONTH_NAMES() {\n        return ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n            'September', 'October', 'November', 'December'];\n    }\n    /**\n     * Create a new component\n     * @constructor\n     */\n    constructor() {\n        this.form = document.signup;\n        this.listContainer = document.querySelector(FormHandler.USER_LIST_CONTAINER_SELECTOR);\n        this.log = new Log();\n\n        if (this.form && this.listContainer) {\n            this.submit = this.form.querySelector(FormHandler.SUBMIT_ELEMENT_SELECTOR);\n            this.msg = this.form.querySelector(FormHandler.MESSAGE_ELEMENT_SELECTOR);\n        }\n    }\n\n    init() {\n        if (this.form && this.listContainer) {\n            this.initForm();\n            this.bindEvents();\n            this.createList();\n        } else {\n            throw new Error('Some of the elements needed are not present in the document.');\n        }\n    }\n\n    /**\n     * Creates a new instance of Input for each of the form elements\n     */\n    initForm() {\n        const formEl = this.form.querySelectorAll(FormHandler.FORM_ELEMENT_SELECTOR);\n\n        formEl.forEach((el) => {\n            const formElement = new Input(el);\n            if (el.getAttribute('data-type') === 'countryList') {\n                this.fetchCountries(formElement);\n            }\n        });\n    }\n\n    /**\n     * Fetch the contries API and fills the select with the result\n     * @param {Object} selectInstance - Input/select instance\n     */\n    fetchCountries(selectInstance) {\n        if (selectInstance) {\n            fetch(FormHandler.COUNTRY_API_URL)\n                .then(data => data.json())\n                .then((data) => {\n                    const optionList = data.map((el) => {\n                        const optionVal = {};\n                        optionVal.name = el.name;\n                        return optionVal;\n                    });\n\n                    selectInstance.selectList = optionList;\n                    this.submitState(false);\n                })\n                .catch(() => {\n                    selectInstance.error('Sorry, we got an error trying to get the country list');\n                });\n        }\n    }\n\n    /**\n     * Change the disabled state of the submit button\n     * @param {Boolean} disabled\n     */\n    submitState(disabled = true) {\n        if (this.submit) {\n            this.submit.disabled = disabled;\n        }\n    }\n\n    /**\n     * Initial event listener for the form submission\n     */\n    bindEvents() {\n        this.form.addEventListener('submit', this.onSubmit.bind(this));\n    }\n\n    /**\n     * On submit events\n     * @param {Object} ev - Submit event\n     */\n    onSubmit(ev) {\n        const data = this.getFormData();\n\n        this.displayMessage(data);\n        this.removeNewEntryClass();\n        this.addLog(data, true);\n        this.log.userList = data;\n        this.form.reset();\n\n        ev.preventDefault();\n    }\n\n    /**\n     * Removes the new entry class to allow a new animation on a new submit\n     */\n    removeNewEntryClass() {\n        const newEntries = this.listContainer.querySelectorAll(FormHandler.NEW_ENTRY_SELECTOR);\n        newEntries.forEach((el) => {\n            el.classList.remove(FormHandler.NEW_ENTRY_CLASS);\n            void el.offsetWidth; // Force reflow for re-starting the animation. Otherwise it won't work\n        });\n    }\n\n    /**\n     * Creates an object with the form data\n     * @returns {Object} cookie value\n     */\n    getFormData() {\n        const inputs = this.form.elements;\n        const obj = {\n            name: inputs.name.value,\n            lastname: inputs.surname.value,\n            country: inputs.country.value,\n            birthdayString: inputs.birthday.value,\n        };\n        return obj;\n    }\n\n    /**\n     * Display the message and creates the string based on data\n     * @param {Object} data - user data\n     */\n    displayMessage(data) {\n        if (this.msg && data) {\n            const bd = this.stringToDate(data.birthdayString);\n            const yearsOld = this.nextBirthdayAge(bd);\n\n            this.msg.classList.remove(FormHandler.MESSAGE_HIDDEN_CLASS);\n            this.msg.innerHTML = `Hello ${data.name} ${data.lastname} from ${data.country}.`;\n            this.msg.innerHTML += ` on ${bd.getDate()} of ${FormHandler.MONTH_NAMES[bd.getMonth()]}`;\n            this.msg.innerHTML += ` you will have ${yearsOld} years old.`;\n        }\n    }\n\n    /**\n     * Turns a date from String to a Date object\n     * @param {String} stringDate - the expected format is DD/MM/YYYY\n     * @returns {Object} Date object\n     */\n    stringToDate(stringDate = '01/01/1970') {\n        const dateValue = stringDate\n            .split('/')\n            .reverse()\n            .map((val, i) => ((i === 1) ? parseFloat(val) - 1 : parseFloat(val)));\n\n        return new Date(...dateValue);\n    }\n\n    /**\n     * Calculates the age on the next birthday\n     * @param {Date object} birthday\n     * @returns {Number} Age on the next birthday\n     */\n    nextBirthdayAge(birthday = new Date()) {\n        const difDates = new Date(Date.now() - birthday.getTime());\n        return Math.abs(difDates.getUTCFullYear() - 1970) + 1;\n    }\n\n    /**\n     * Adds a new entry to the user list, and adds an event listener to the element\n     * @param {Object} data - user data\n     */\n    addLog(data = {}, newEntry = false) {\n        const entryHTML = document.createElement('div');\n        entryHTML.innerHTML = `<div class=\"user-list__entry\">` +\n            `<span class=\"user-list__cel user-list__cel--main\">${data.name} ${data.lastname}</span>` +\n            `<span class=\"user-list__cel\">${data.country}</span>` +\n            `<span class=\"user-list__cel\">${data.birthdayString}</span>` +\n            `</div>`;\n        const addedEntry = this.listContainer.insertBefore(entryHTML.firstChild, this.listContainer.firstChild);\n\n        if (newEntry) {\n            addedEntry.classList.add(FormHandler.NEW_ENTRY_CLASS);\n        }\n        addedEntry.addEventListener('click', this.displayMessage.bind(this, data));\n    }\n\n    /**\n     * Creates the list based on the data saved on the localStorage\n     */\n    createList() {\n        const list = this.log.userList;\n\n        list.forEach((el) => {\n            this.addLog(el);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/formHandler.es6","/**\n * @class Input\n * Reusable based for inputs\n */\nexport default class Input {\n    /**\n     * @constant\n     * @type {string}\n     */\n    static get FORM_GROUP_ERROR_CLASS() {\n        return 'form-el--error';\n    }\n    /**\n     * @constant\n     * @type {string}\n     */\n    static get INPUT_ERROR_SELECTOR() {\n        return '.js-input-error';\n    }\n    /**\n     * Create a new component\n     * @constructor\n     */\n    constructor(containerElement, inputSelector = 'input, textarea, select') {\n        this._containerElement = containerElement;\n        this._inputElement = this._containerElement.querySelector(inputSelector);\n        this.bindEvents();\n    }\n\n    /**\n     * Add the error class and message to the input\n     * @param {array} messages - error messages\n     */\n    error(message = '') {\n        this._containerElement.classList.add(Input.FORM_GROUP_ERROR_CLASS);\n\n        const msgContainer = this._containerElement.querySelector(Input.INPUT_ERROR_SELECTOR);\n\n        if (msgContainer) {\n            msgContainer.innerHTML = message;\n        }\n    }\n    /**\n     * Binds the events to the input\n     */\n    bindEvents() {\n        if (this._inputElement) {\n            this._inputElement.addEventListener('blur', this.blurEventHandler.bind(this));\n            this._inputElement.addEventListener('keyup', this.keyUpEventHandler.bind(this));\n        }\n    }\n    /**\n     * Handle onBlur Event for input field\n     */\n    blurEventHandler() {\n        if (!this.validate()) {\n            this.error(this._inputElement.validationMessage);\n        } else {\n            this.error();\n            this._containerElement.classList.remove(Input.FORM_GROUP_ERROR_CLASS);\n        }\n    }\n    /**\n     * Handle onFocus Event for input field\n     */\n    keyUpEventHandler() {\n        if (this._containerElement.classList.contains(Input.FORM_GROUP_ERROR_CLASS)) {\n            this.blurEventHandler();\n        }\n    }\n\n    /**\n     * Check for input validation\n     */\n    validate() {\n        if (\n            (this.required || this._inputElement.getAttribute('pattern')) &&\n            !this._inputElement.checkValidity()) {\n            this._containerElement.classList.add(Input.FORM_GROUP_ERROR_CLASS);\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Get/set data\n     */\n    set selectList(data) {\n        if (this._inputElement.tagName === 'SELECT') {\n            this._inputElement.innerHTML = '';\n            data.forEach((option) => {\n                if (option.name) {\n                    const optionEl = document.createElement('option');\n                    this._inputElement.appendChild(optionEl);\n                    optionEl.innerHTML = option.name;\n                    optionEl.setAttribute('value', option.val || option.name);\n                }\n            });\n        }\n    }\n\n    /**\n     * Get/set required\n     */\n    set required(value) {\n        this._inputElement.required = value;\n    }\n\n    get required() {\n        return this._inputElement.required;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/input.es6","/**\n * @class UserLogHandler\n * Handles the user list stored in the localStorage\n */\nexport default class Log {\n    /**\n     * Variable name for localStorage\n     * @constant\n     * @type {String}\n     */\n    static get LOCALSTORAGE_VARIABLE() {\n        return 'userList';\n    }\n    /**\n     * Get/set required\n     */\n    set userList(value) {\n        const list = this.userList;\n        list.push(value);\n        localStorage.setItem(Log.LOCALSTORAGE_VARIABLE, JSON.stringify(list));\n    }\n\n    get userList() {\n        return JSON.parse(localStorage.getItem(Log.LOCALSTORAGE_VARIABLE)) || [];\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/userLogHandler.es6"],"sourceRoot":""}